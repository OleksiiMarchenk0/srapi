

{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Szkola Reacta API",
    "description": "Szkola Reacta endpoints",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "api.szkolareacta.pl",
  "basePath": "/v1",
  "tags": [
    {
      "name": "movies",
      "description": "API for movies"
    },
    {
      "name": "events",
      "description": "API for events"
    },
    {
      "name": "places",
      "description": "API for places"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/movies": {
      "post": {
        "tags": [
          "movies"
        ],
        "summary": "Create new movie",
        "parameters": [
          {
            "name": "post",
            "in": "body",
            "description": "Movie that we want to create",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New movie was created",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Get all movies",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movies"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/movies/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of movie we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Get movie with given ID",
        "responses": {
          "200": {
            "description": "Movie is found",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Movie with given ID",
        "tags": [
          "movies"
        ],
        "responses": {
          "200": {
            "description": "Movie was deleted",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "summary": "Update movie with given ID",
        "tags": [
          "movies"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "body",
            "description": "Movie with new values of properties",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movie was updated",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Empty": {
      "properties": {

      }
    },
    "Movie": {
      "required": [
        "title",
        "description",
        "video_url"
      ],
      "properties": {
        "id": {
          "type": "string",
          "uniqueItems": true
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "video_url": {
          "type": "string"
        }
      }
    },
    "Movies": {
      "type": "array",
      "$ref": "#/definitions/Movie"
    }
  }
}
